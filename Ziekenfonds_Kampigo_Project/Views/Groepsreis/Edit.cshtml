@model Ziekenfonds_Kampigo_Project.ViewModels.Groepsreis.EditGroepsreisViewModel

<partial name="_Notification" />
@{
    ViewData["Title"] = "Groepsreis Bewerken";
}

<div class="mt-2 rounded-t-lg bg-gradient-to-r from-gray-600 to-gray-700 p-4">
    <h2 class="text-center text-2xl font-semibold text-white">@ViewData["Title"]</h2>
</div>

<form asp-action="Edit" method="post" enctype="multipart/form-data" class="mt-5 space-y-6">
    <!-- Hidden ID field for Groepsreis -->
    <input type="hidden" asp-for="Id" />

    <!-- Two Column Layout -->
    <div class="grid-cols-1 grid gap-6 sm:grid-cols-2">
        <!-- Begindatum -->
        <div class="form-group">
            <label asp-for="Begindatum" class="block text-sm font-medium text-gray-700">Begindatum</label>
            <input asp-for="Begindatum" class="mt-1 block w-full rounded-md border border-gray-300 p-2.5 text-sm focus:ring-blue-500 focus:border-blue-500" type="date" />
            <span asp-validation-for="Begindatum" class="text-sm text-red-500"></span>
        </div>

        <!-- Einddatum -->
        <div class="form-group">
            <label asp-for="Einddatum" class="block text-sm font-medium text-gray-700">Einddatum</label>
            <input asp-for="Einddatum" class="mt-1 block w-full rounded-md border border-gray-300 p-2.5 text-sm focus:ring-blue-500 focus:border-blue-500" type="date" />
            <span asp-validation-for="Einddatum" class="text-sm text-red-500"></span>
        </div>

        <!-- Prijs -->
        <div class="form-group">
            <label asp-for="Prijs" class="block text-sm font-medium text-gray-700">Prijs</label>
            <input asp-for="Prijs" class="mt-1 block w-full rounded-md border border-gray-300 p-2.5 text-sm focus:ring-blue-500 focus:border-blue-500" type="number" step="0.01" />
            <span asp-validation-for="Prijs" class="text-sm text-red-500"></span>
        </div>
    </div>

    <!-- Bestemming Details -->
    <div class="form-group">
        <h4 class="mb-2 text-lg font-semibold text-gray-700">Bestemming</h4>

        <label asp-for="Bestemming.Naam" class="mt-3 block text-sm font-medium text-gray-700">Naam</label>
        <input asp-for="Bestemming.Naam" class="mt-1 block w-full rounded-md border border-gray-300 p-2.5 text-sm focus:ring-blue-500 focus:border-blue-500" />
        <span asp-validation-for="Bestemming.Naam" class="text-sm text-red-500"></span>
        
        <label asp-for="Bestemming.Beschrijving" class="mt-3 block text-sm font-medium text-gray-700">Beschrijving</label>
        <textarea asp-for="Bestemming.Beschrijving" class="mt-1 block w-full rounded-md border border-gray-300 p-2.5 text-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
        <span asp-validation-for="Bestemming.Beschrijving" class="text-sm text-red-500"></span>

        <label asp-for="Bestemming.MinLeeftijd" class="mt-3 block text-sm font-medium text-gray-700">Minimale Leeftijd</label>
        <input asp-for="Bestemming.MinLeeftijd" class="mt-1 block w-full rounded-md border border-gray-300 p-2.5 text-sm focus:ring-blue-500 focus:border-blue-500" type="number" />
        <span asp-validation-for="Bestemming.MinLeeftijd" class="text-sm text-red-500"></span>

        <label asp-for="Bestemming.MaxLeeftijd" class="mt-3 block text-sm font-medium text-gray-700">Maximale Leeftijd</label>
        <input asp-for="Bestemming.MaxLeeftijd" class="mt-1 block w-full rounded-md border border-gray-300 p-2.5 text-sm focus:ring-blue-500 focus:border-blue-500" type="number" />
        <span asp-validation-for="Bestemming.MaxLeeftijd" class="text-sm text-red-500"></span>            
    </div>

    <!-- Photo Upload Section -->
    <div class="mx-auto my-6 w-full">
        <label id="dropArea" for="Photos"
               class="border-2 flex h-32 w-full cursor-pointer flex-col items-center justify-center rounded-lg border-dashed border-blue-400 transition duration-200 hover:bg-blue-50">
            <div class="flex flex-col items-center justify-center">
                <svg class="h-10 w-10 text-blue-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 16l3.25-3.25m2.75 2.75l6-6M10 12.75l6-6M3 3h18v18H3z"></path>
                </svg>
                <p class="mt-2 text-sm text-blue-400">Klik om foto's hier te uploaden of sleep ze hierheen</p>
                <p class="mt-1 text-xs text-gray-500">
                    Je kunt meerdere foto's uploaden
                </p>
            </div>
            <input id="Photos" name="Photos" type="file" class="hidden" multiple onchange="previewImages()" accept="image/*" />
        </label>

        <!-- Displaying uploaded images -->
        <div id="imagePreviewContainer" class="grid-cols-2 mt-6 grid gap-4 md:grid-cols-4">
        </div>
    </div>

    <!-- Current Photos -->
    <div class="form-group">
        <label class="block text-sm font-medium text-gray-700">Huidige Foto's</label>
        <div class="grid-cols-2 mt-4 grid gap-4 md:grid-cols-4">
            @if (Model.Bestemming.Fotos != null && Model.Bestemming.Fotos.Any())
            {
                foreach (var foto in Model.Bestemming.Fotos)
                {
                    <div class="photo-item group relative">
                        <img src="@Url.Content("~/img/bestemming/" + foto.Naam)" alt="Bestemming Foto" class="photo-preview rounded-lg shadow-md transition-all duration-300" />

                        <!-- Delete Button -->
                        <button type="button" class="delete-photo opacity-0 group-hover:opacity-100 absolute right-2 top-2 rounded-full bg-red-500 p-2 text-white shadow-md transition-all duration-200 hover:bg-red-600 focus:outline-none"
                                data-photo-id="@foto.Id" data-groepsreis-id="@Model.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-5 w-5">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                            </svg>
                        </button>
                    </div>
                }
            }
            else
            {
                <p>Er zijn geen foto's beschikbaar voor deze bestemming.</p>
            }
        </div>
    </div>

    <div class="form-group">
        <label class="mb-2 block text-sm font-medium text-gray-700">Selecteer Activiteiten:</label>
        <div class="grid gap-6 rounded-lg border border-gray-300 bg-white p-4 shadow-md md:grid-cols-2 lg:grid-cols-3">
            @foreach (var activiteit in Model.Activiteiten)
            {
                <div class="flex items-center rounded-md border border-gray-200 bg-gray-50 p-2 shadow-sm hover:bg-gray-100">
                    <input class="form-check-input h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-blue-500 focus:ring-2"
                           type="checkbox"
                           name="ActiviteitenIds"
                           value="@activiteit.Value"
                    @(Model.ActiviteitenIds.Contains(int.Parse(activiteit.Value)) ? "checked" : "") />
                    <label class="ml-2 text-sm text-gray-700">@activiteit.Text</label>
                </div>
            }
        </div>
    </div>

    <!-- Submit Button -->
    <div class="mt-4 flex flex-wrap justify-start space-x-2">
        <button type="submit"
                class="inline-flex items-center rounded-lg bg-blue-500 px-5 py-2.5 text-sm font-medium text-white shadow-md transition-all duration-150 ease-in-out hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400">
            <svg aria-hidden="true" class="mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M12 5l7 7-7 7" />
            </svg>
            Opslaan
        </button>
        <a asp-controller="Groepsreis"
           asp-action="Index"
           class="rounded-md bg-gray-500 px-4 py-2 text-white shadow-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-300">
            Terug
        </a>
    </div>
</form>



@section Scripts{
    <script>
        // script to dynamically remove images from the UI and database with an ajax call.
        document.querySelectorAll('.delete-photo').forEach(button => {
            button.addEventListener('click', function () {
                const photoId = this.getAttribute('data-photo-id');
                const groepsreisId = this.getAttribute('data-groepsreis-id');

                // Remove photo from UI
                this.closest('div.photo-item').remove();

                // AJAX request to delete the photo from database
                fetch(`/Foto/Delete?fotoId=${photoId}&groepsreisId=${groepsreisId}`, {
                    method: 'POST'
                }).then(response => {
                    if (response.ok) {
                        console.log('Photo deleted');
                    } else {
                        console.log('Error deleting photo');
                    }
                });
            });
        });
    </script>
    <script>
        // script to handle drag events and preview the dragged images
        document.addEventListener("DOMContentLoaded", function () {
            const dropArea = document.getElementById('dropArea');
            const fileInput = document.getElementById('Photos');
            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            let uploadedImages = [];

            // Dragging feature
            ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, (e) => e.preventDefault());
                dropArea.addEventListener(eventName, (e) => e.stopPropagation());
            });

            // Add visual feedback for drag events
            ['dragenter', 'dragover'].forEach(eventName => {
                dropArea.addEventListener(eventName, () => dropArea.classList.add('bg-blue-100'));
            });

            ['dragleave', 'drop'].forEach(eventName => {
                dropArea.addEventListener(eventName, () => dropArea.classList.remove('bg-blue-100'));
            });

            // Handle dropped files
            dropArea.addEventListener('drop', (e) => {
                const files = e.dataTransfer.files; 
                fileInput.files = files; 
                previewImages(); 
            });

            // Preview images function
            function previewImages() {
                imagePreviewContainer.innerHTML = ''; 
                uploadedImages = []; 

                Array.from(fileInput.files).forEach((file, index) => {
                    const reader = new FileReader();
                    reader.onload = function (event) {
                        const imageWrapper = document.createElement("div");
                        imageWrapper.classList.add("relative", "group");

                        const img = document.createElement("img");
                        img.src = event.target.result;
                        img.alt = "Uploaded Image";
                        img.classList.add("w-full", "rounded-md");

                        // Create delete button
                        const deleteBtn = document.createElement("button");
                        deleteBtn.innerHTML = "&#10005;"; // x symbol icon with css
                        deleteBtn.classList.add(
                            "absolute",
                            "top-2",
                            "right-2",
                            "bg-red-500",
                            "text-white",
                            "rounded-full",
                            "p-1",
                            "text-xs",
                            "opacity-0",
                            "group-hover:opacity-100",
                            "transition-opacity",
                            "duration-300"
                        );

                        // click handler to remove image
                        deleteBtn.addEventListener("click", function (e) {
                            e.preventDefault();
                            imageWrapper.remove(); // Remove the preview
                            uploadedImages.splice(index, 1); // Remove from tracking array
                        });

                        // Append the elements
                        imageWrapper.appendChild(img);
                        imageWrapper.appendChild(deleteBtn);
                        imagePreviewContainer.appendChild(imageWrapper);

                        // Add to the tracking array
                        uploadedImages.push(file);
                    };
                    reader.readAsDataURL(file);
                });
            }

            // file input change
            fileInput.addEventListener('change', function () {
                previewImages();
            });
        });
    </script>
}
